#!/bin/zsh

# Create and maintain local Zotero storage library. If they do not already
# exist, create a directory for every item in `my_library.bib`, which contains
# my entire Zotero library. Name the directories after the BibLaTeX keys. Name
# any files in the directories after the directories (and any files in
# subdirectories after both the directory and the subdirectory). In this way,
# automatically rename every file in local storage with a unique name and
# according to a standard naming convention.

setopt rc_expand_param

cd $HOME/Documents/Zotero/Storage || exit 1

# Parse `bib` file {{{1

echo 'Parsing BibLaTeX file...'
matches=( ${(f)"$(rg --line-number '^@.+\{(.+?)\.*,$' --replace '$1' -- \
    $HOME/Library/texmf/bibtex/bib/my_library.bib)"} )

key_line_numbers=( )
biblatex_keys=( )
for match in $matches; do
    key_line_numbers+=$(echo $match | cut -d : -f 1)
    biblatex_keys+=$(echo $match | cut -d : -f 2)
done

# If directory corresponding to `bib` entry doesn't exist, make it {{{1

echo 'Making directories for new entries...'
for key in $biblatex_keys; do
    if [[ ! -d $key ]]; then
        mkdir $key
    fi
done

#{{{1  Check for attachments in Zotero cloud storage

echo 'Checking for attachments in Zotero cloud storage...'

matches=( ${(f)"$(rg --line-number --only-matching \
    '(/Users/rhelder/.local/share/zotero/storage/[^};]+)(}|;)' --replace='$1' \
    $HOME/Library/texmf/bibtex/bib/my_library.bib)"} )

file_line_numbers=( )
files=( )
for match in $matches; do
    file_line_numbers+=$(echo $match | cut -d : -f 1)
    files+=$(echo $match | cut -d : -f 2)
done

if (( $#files > 1 )); then
    echo $#files "attachments were found in Zotero's cloud storage:"
elif (( $#match == 1 )); then
    echo '1 attachment was found in Zotero cloud storage:'
fi

items=( )
for file in $files; do
    integer file_line_number=$file_line_numbers[${(k)files[(r)$file]}]
    for key_line_number in $key_line_numbers; do
        if (( key_line_number > file_line_number )); then
            break
        fi
        item=$biblatex_keys[${(k)key_line_numbers[(r)$key_line_number]}]
    done
    items+=$item

    echo "${item}: ${file##*/}"
done

integer len=$#files
for (( i=1; i<=len; i++ )); do
    read "?Copy '${files[i]##*/}' to ~/Documents/Zotero/Storage? (y/n) "
    if [[ $REPLY == y || $REPLY == Y ]]; then
        read "?Type name of subdirectory: "
        subdirectory=$REPLY
        mkdir $items[i]/$subdirectory && \
            cp $files[i] $items[i]/$subdirectory/${files[i]##*/} && \
            echo 'File copied.'
    else
        echo 'File not copied.'
    fi

    read "?Show '${files[i]##*/}' in Finder? (y/n) "
    if [[ $REPLY == y || $REPLY == Y ]]; then
        open -g $items[i]/$subdirectory
    fi
done

#{{{1 Rename files in local Zotero storage

echo 'Renaming files in local Zotero storage...'
for key in $biblatex_keys; do
    cd $key

    # Rename files after the parent directory
    for file in *(N.); do
        mv $file ${file/*./$key.}
    done

    # Rename files in subdirectories after their parent directory and the
    # parent of the parent directory
    for subdirectory in *(NF); do
        cd $subdirectory
        for file in *(.); do
            mv $file ${file/*./$key\_$subdirectory.}
        done
        cd ..
    done
    cd ..
done

#{{{1 Check that storage directory and Zotero library are in sync

echo 'Checking that storage directory and Zotero library are in sync...'
if [[ $(comm -23 =(print -l $biblatex_keys | sort) =(ls | sort)) ]]; then
    echo 'zotero-storage: unknown error' >&2
    exit 1
elif [[ $(comm -13 =(print -l $biblatex_keys | sort) =(ls | sort)) ]]; then
    echo 'The following items are not in your Zotero library:' >&2
    echo $(comm -13 =(print -l $biblatex_keys | sort) =(ls | sort)) >&2
fi

echo 'Done.'
