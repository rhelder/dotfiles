# Before autoloading, check whether or not name is already defined as a
# command, function, alias, etc. If not, let 'autoload' act as normal. Also
# 'unfunction' before autoloading so that any changes made to the function can
# be loaded the next time the function is called.

local -a flags
while getopts 'cfRTUXdkmrtWz' flag; do
    case $flag in
        (c)     local -i config=1;;
        (f)     local -i force=1;;
        (R)     flags+=( '-R' );;
        (+R)    flags+=( '+R' );;
        (T)     flags+=( '-T' );;
        (+T)    flags+=( '+T' );;
        (U)     flags+=( '-U' );;
        (+U)    flags+=( '+U' );;
        (X)     flags+=( '-X' );;
        (+X)    flags+=( '+X' );;
        (d)     flags+=( '-d' );;
        (+d)    flags+=( '+d' );;
        (k)     flags+=( '-k' );;
        (+k)    flags+=( '+k' );;
        (m)     local -i mopt=1; flags+=( '-m' );;
        (+m)    local -i mopt=1; flags+=( '+m' );;
        (r)     flags+=( '-r' );;
        (+r)    flags+=( '+r' );;
        (t)     flags+=( '-t' );;
        (+t)    flags+=( '+t' );;
        (W)     flags+=( '-W' );;
        (+W)    flags+=( '+W' );;
        (z)     flags+=( '-z' );;
        (+z)    flags+=( '+z' );;
    esac
done
shift $(( OPTIND - 1 ))

if [[ ! -n $* || -n $mopt ]]; then
    builtin autoload $flags $*
    return $?
fi

# Keep track of functions with the '-c' option so that they aren't flagged as
# 'already defined' every time '.zshrc' is re-sourced
declare -Uga autoload_sourced_zshrc_functions

local -i exit_status
local name
for name in $*; do
    if [[
        -z $(whence $name) ||
        $name == 'autoload' ||
        -n $autoload_sourced_zshrc_functions[(r)$name] ||
        -n $force
    ]]; then
        [[ -n $config ]] && autoload_sourced_zshrc_functions+=$name

        typeset -f $* > /dev/null && unfunction $*
        builtin autoload $flags $name
        continue
    fi

    local zshrc_line_number=$funcfiletrace[(r)$XDG_CONFIG_HOME/zsh/.zshrc*]
    if [[ -n $zshrc_line_number ]]; then
        echo 'autoload:'${zshrc_line_number}':' $name 'already defined' >&2
    else
        echo 'autoload:' $name 'already defined' >&2
    fi
    exit_status=1
    continue
done

return $exit_status
