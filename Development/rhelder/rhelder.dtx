% \iffalse meta-comment
% Copyright (C) 2025 Russell Wright Helder
% \fi
%
% \iffalse
%<*driver>
\ProvidesFile{rhelder.dtx}
%</driver>
%<package>\NeedsTeXFormat{LaTeX2e}[2021/11/15]
%<package>\ProvidesPackage{rhelder}
  [2025/01/14 Russell Wright Helder's style file]
%
%<*driver>
\documentclass{ltxdoc}
\usepackage{iftex}
\RequireTUTeX

\makeatletter
\newsavebox{\rh@bin}
\NewDocumentEnvironment{noprintcode}{}{
  \begin{lrbox}{\rh@bin}
  \begin{minipage}{\linewidth}
  \macro@code
  \frenchspacing\@vobeyspaces
  \xnoprint@code
}{
  \endmacrocode
  \end{minipage}
  \end{lrbox}
}
\begingroup
\catcode`\|=\z@ \catcode`\[=\@ne \catcode`\]=\tw@
\catcode`\{=12 \catcode`\}=12
\catcode`\%=12 \catcode`\ =\active \catcode`\\=\active
|gdef|xnoprint@code#1%    \end{noprintcode}[#1|end[noprintcode]]
|endgroup
\makeatother

\begin{document}
  \DocInput{rhelder.dtx}
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{rhelder.dtx}
%
% \title{The \texttt{rhelder} Package:
%   My Style File}
% \author{Russell Wright Helder}
% \date{\filedate}
%
% \maketitle
%
% \iffalse meta-comment
% \section{Preamble}
%
%    Typeset the preamble in a saved box
%    to correctly set the line number counter.
%    (Yes, that could be done by just setting the counter,
%    but this is clearer).
% \fi
%    \begin{noprintcode}
% This is file `rhelder.sty',
% generated with the docstrip utility.
%
% The original source files were:
%
% rhelder.dtx  (with options: `package')
%
% Copyright (C) 2025 Russell Wright Helder
%
% This work consists of the files rhelder.dtx, rhelder.ins,
% and the derived files rhelder.sty and rhelder.pdf.
%
%    \end{noprintcode}
%
% \section{Identification}
%
%    |rhelder| requires \LaTeX{}3
%    and the \LaTeX{} hook management system.
%    Require the 2021/11/15 release,
%    at which point \LaTeX{}3
%    had been incorporated into the \LaTeX{} kernel
%    and the hook names used in the \LaTeX{} hook managment system
%    had been standardized.
%
% \iffalse
%<*doc>
% \fi
%    \begin{macrocode}
\NeedsTeXFormat{LaTeX2e}[2021/11/15]
\ProvidesPackage{rhelder}
  [2025/01/14 Russell Wright Helder's style file]
%    \end{macrocode}
% \iffalse
%</doc>
% \fi
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \section{Declare Options}
%
%    \begin{macrocode}
\DeclareKeys[rhelder]{
%    \end{macrocode}
%
% \subsection{\texttt{biblatex} Option}
%
%    The values passed to the |biblatex| option
%    are themselves key-value options.
%    They will be handled later as a separate family of keys.
%    \begin{macrocode}
  biblatex.code = \SetKeys[rh@biblatex]{#1},
%    \end{macrocode}
%
% \subsection{\texttt{doublespaced} Option}
%
%    Load the |setspace| package and call |\doublespacing|.
%    \begin{macrocode}
  doublespaced.if = rh@doublespaced,
%    \end{macrocode}
%
% \subsection{\texttt{anonymous} Option}
%
%    Do not include the name of the author
%    either in the title or in the PDF metadata.
%    \begin{macrocode}
  anonymous.if = rh@anonymous,
%    \end{macrocode}
%
% \subsection{\texttt{author} Option}
%
%    Set the name of the author
%    to be used in both the title and the PDF metadata.
%    This option is mutually exclusive with the |anonymous| option.
%    \begin{macrocode}
  author.code =
    \notbool{rh@anonymous}{
      \author{#1}
      \AddToHook{package/hyperref/after}{\hypersetup{pdfauthor=#1}}
    }{},
%    \end{macrocode}
%
% \subsection{\texttt{translit} Option}
%
%    The secondary literature on ancient Greek philosophy
%    transliterates certain Greek words more often than not.
%    Determine whether or not to transliterate these words.
%    \begin{macrocode}
  translit.if = rh@translit,
}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \subsection{Handle \texttt{biblatex} Options}
%
% \begin{macro}{\rh@biblatex@style}
%     When the key is the name of one of the |biblatex-chicago| styles,
%     store the style name in a macro.
%    \begin{macrocode}
\DeclareKeys[rh@biblatex]{
  authordate.code = \def\rh@biblatex@style{authordate},
  notes.code = \def\rh@biblatex@style{notes},
}
%    \end{macrocode}
%     Initialize the macro to avoid errors.
%    \begin{macrocode}
\let\rh@biblatex@style\empty
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
% \end{macro}
%
% \begin{macro}{\rh@biblatex@opts}
%    Store all the remaining values in a macro
%    to be passed directly to |biblatex-chicago|.
%    \begin{macrocode}
\DeclareUnknownKeyHandler[rh@biblatex]{
  \eappto\rh@biblatex@opts{\ifblank{#2}{#1}{#1=#2},}
}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
% \end{macro}
%
% \begin{macro}{\rh@biblatex@notes,\rh@biblatex@authordate}
%    Define macros that prepend some default options
%    to the options specified by the user
%    (note that because they are \emph{prepended},
%    the defaults can be overridden by the user),
%    load |biblatex-chicago|,
%    and execute all options.
%    \begin{macrocode}
\def\rh@biblatex@notes{
  \epreto\rh@biblatex@opts{
    autolang=hyphen,
    citereset=section,
    pagetracker=false,
    doi=false,
    isbn=false,
    url=false,
    dashed=false,
    compresspages=true,
    formatbib=minwo,
  }
  \expandafter\RequirePackage\expandafter[\rh@biblatex@style]{biblatex-chicago}
  \expandafter\ExecuteBibliographyOptions\expandafter{\rh@biblatex@opts}
}

\def\rh@biblatex@authordate{
  \epreto\rh@biblatex@opts{cmslos=false,}
  \rh@biblatex@notes
}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
% \end{macro}
%
% \subsection{Set Defaults}
%
%    \begin{macrocode}
\SetKeys[rhelder]{
  author={Russell Wright Helder},
  translit=true,
}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \section{Execute Options}
%
%    Load the |etoolbox| package,
%    which is necessary for executing some of the options.
%
%    \begin{macrocode}
\RequirePackage{etoolbox}
\ProcessKeyOptions
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \section{Load Packages}
%
% \subsection{\texttt{hyperref}}
%
% Ensure that |hyperref| is loaded last.
%    \begin{macrocode}
\AddToHook{begindocument/before}{\RequirePackage{hyperref}}
%    \end{macrocode}
%
% \subsection{\texttt{babel}}
%
%    Although package loading order
%    doesn't seem to have material consequences,
%    load |babel| first to reflect the fact
%    that many other packages depend on it.
%    \begin{macrocode}
\RequirePackage[
  shorthands=off,
  latin,
  english.american,
]{babel}
\babelprovide[import=grc]{ancientgreek}
%    \end{macrocode}
%
% \subsection{Paragraph-Level Formatting}
%
%    \begin{macrocode}
\RequirePackage{ragged2e}
\RequirePackage[babel]{microtype}
\ifbool{rh@doublespaced}{\RequirePackage{setspace}}{}
\RequirePackage[shortcuts]{extdash}
\RequirePackage[
  strict,
  autostyle,
  english=british,
  latin=britishquotes,
]{csquotes}
\PassOptionsToPackage{hyphens}{url}
\RequirePackage{cmos}
%    \end{macrocode}
%
% \subsection{Lists}
%
%    \begin{macrocode}
\RequirePackage[indentfirst=false]{quoting}
\RequirePackage{enumitem}
\RequirePackage{pifont} % For labels in the `itemize' environment
%    \end{macrocode}
%
% \subsection{Page Layout}
%
%    \begin{macrocode}
\RequirePackage{geometry}
%    \end{macrocode}
%
% \subsection{Tables}
%
%    \begin{macrocode}
\RequirePackage{array}
\RequirePackage{booktabs}
%    \end{macrocode}
%
% \subsection{\texttt{biblatex}}
%
%    Call either |\rh@biblatex@notes| or |\rh@biblatex@author|
%    (which were defined when we declared options)
%    depending on the value of |\rh@biblatex@style|
%    (which was defined when options were processed).
%    \begin{macrocode}
\csuse{rh@biblatex@\rh@biblatex@style}
%    \end{macrocode}
%
%    Undefine these temporary macros now that they have served their purpose.
%    \begin{macrocode}
\undef\rh@biblatex@authordate
\undef\rh@biblatex@notes
\undef\rh@biblatex@opts
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \section{Configure Packages}
%
% \subsection{\texttt{hyperref}}
%
%    \begin{macrocode}
\AddToHook{package/hyperref/after}{
  \hypersetup{
    colorlinks=true,
    linkcolor=black,
    filecolor=magenta,
    citecolor=black,
    urlcolor=blue,
    pdfpagemode=UseNone,
    pdftitle=\@title,
  }
  \urlstyle{same}
}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \subsection{\texttt{babel}}
%
%    \begin{macrocode}
\babelfont{rm}{Brill}
\babelprovide[hyphenrules=classiclatin]{latin}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \subsection{\texttt{setspace}}
%
%    \begin{macrocode}
\ifbool{rh@doublespaced}{
  \doublespacing
  \IfPackageLoadedTF{biblatex-chicago}{\setlength{\bibitemsep}{0pt}}{}
}{}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \subsection{\texttt{csquotes} and \texttt{quoting}}
%
%    \begin{macrocode}
\DeclareQuoteStyle{ancientgreek}
  {\textquotedblleft}{\textquotedblright}
  {\textquoteleft}{\textquoteright}
\IfPackageLoadedTF{biblatex-chicago}{\SetCiteCommand{\autocite}}{}

\SetBlockEnvironment{quoting}
\RenewCommandCopy\quotation\quoting
\RenewCommandCopy\endquotation\endquoting
\RenewCommandCopy\quote\quoting
\RenewCommandCopy\endquote\endquoting
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \subsection{\texttt{enumitem}}
%
% \begin{environment}{outline}
%    \begin{macrocode}
\setlist[itemize,2]{label=\ding{118}}
\setlist[itemize,3]{label=\ding{66}}
\newlist{outline}{enumerate}{5}
\setlist[outline,1]{label=\Roman*.}
\setlist[outline,2]{label=\Alph*.}
\setlist[outline,3]{label=\arabic*.}
\setlist[outline,4]{label=\alph*.}
\setlist[outline,5]{label=\roman*.}
%    \end{macrocode}
% \end{environment}
%
%    Define inline |enumerate|
%    \begin{macrocode}
\newlist{enumerate*}{enumerate*}{1}
\setlist[enumerate*]{label=\Alph*.}
%    \end{macrocode}
%
%    Make paragraph spacing within list same as outside of list
%    \begin{macrocode}
\setlist{listparindent=\parindent, parsep=\parskip}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \subsection{\texttt{biblatex}}
%
%    \begin{macrocode}
\IfPackageLoadedTF{biblatex-chicago}{%
  \addbibresource{my_library.bib}
%    \end{macrocode}
%
%    Apply |shorthandfirst| and |shorthandintro| options
%    to all entries of the |classical| |entrysubtype|.
%    \begin{macrocode}
  \DeclareSourcemap{%
    \maps[datatype=bibtex]{%
      \map[overwrite]{%
        \step[fieldsource=entrysubtype, match=classical, final]
        \step[
          fieldset=options,
          fieldvalue={,shorthandfirst=false,shorthandintro=short},
          append,
        ]
      }
    }
  }
%    \end{macrocode}
%
%    Reset footnote-specific |ibidtracker| at beginning of each footnote
%    \begin{macrocode}
  \NewCommandCopy\footnotetextCopy\footnotetext % FIXME patch instead
  \RenewDocumentCommand{\footnotetext}{+m}{\footnotetextCopy{\mancite #1}}
}{}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \section{Page Layout}
%
% \begin{macro}{
%    \rh@upperletters,
%    \rh@lowerletters,
%    \rh@spaces,
%    \rh@others@nondigit,
%    \rh@others@digit,
%    \rh@allprintablechars,
%    \rh@linelength,
%    \rh@maxtextwidth,
%    \rh@maxtextwidth@twocol,
%    \rh@maxtextheight,
%    rh@maxlines,
%    \rh@textheight,
% }
%    Define lengths and counters
%    \begin{macrocode}
\newlength\rh@upperletters
\newlength\rh@lowerletters
\newlength\rh@spaces
\newlength\rh@others@nondigit
\newlength\rh@others@digit
\newlength\rh@allprintablechars
\newlength\rh@linelength
\newlength\rh@maxtextwidth
\newlength\rh@maxtextwidth@twocol
\newlength\rh@maxtextheight
\newcounter{rh@maxlines}
\newlength\rh@textheight
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
% \end{macro}
%
% \subsection{Set \cs{textwidth}}
%
% \begin{macro}{\settextwidth}
%    Get the average width of a character in the current font
%    and multiply that by a number between 60 and 70
%    to get a typographically correct line length.
%
%    Get the `average width' of a character
%    by dividing the most commonly typed characters in a font
%    into different categories:
%    upper-case letters, lower-case letters, spaces,
%    `other' non-digit characters, and `other' digit characters.
%    Get the length of all the characters in the category together.
%    Assign each of these categories a weight,
%    depending on (very roughly) how often the members of that class
%    are used in a typical document
%    compared to members of the other classes.
%    Construct a lenght consisting of the lengths of all the categories
%    multiplied by their respective weights.
%    Then divide by the total number of resultant characters
%    to get the average character width.
%    Then multiply the average character width
%    by a number between 60 and 70
%    to get an appropriate line length.
%    (69 is the default,
%    because, when using Latin Modern font,
%    69 gives the closest to the |article| document class defaults.)
%
%    The weights were calculated by taking
%    the Stanford Encyclopedia of Philosophy's article on Aristotle
%    and the Stanford Encyclopedia of Philosophy's article on Plato
%    as a sample.
%    Because we are trying to calculate the \cs{textwidth},
%    which is going to be equal to the line length of a paragraph,
%    all non-paragraph text was considered to be non-representative
%    and was deleted.
%    First, all non-body material was deleted from the HTML files.
%    Then, the HTML files were converted to Markdown with Pandoc
%    so that other non-paragraph elements would be easy to see.
%    Headers, tables, and lists were then deleted manually.
%    The Markdown files were then converted to plain text with Pandoc,
%    which eliminated any links embedded in the Markdown text.
%    Finally, any leading spaces (which preceded block quotes) were deleted,
%    and nothing remained but paragraph text.
%    The relative weight of each character category
%    was calculated on the basis of the resulting text.
%
%    Because two articles are not a big sample,
%    the weights were rounded to one significant figure.
%    The results seem satisfactory:
%    the calculated \cs{textwidth} yields the right number of words per line
%    and scales appropriately with the width
%    of the glyphs in the font being used.
%    The calculated \cs{textwidth} is much greater when using Latin Modern,
%    for example, than when using Brill,
%    which is typographically correct,
%    since Brill's glyphs are much narrower than Latin Modern's.
%    Moreover, the page holds almost exactly the same amount of text
%    when using Latin Modern as when using Brill,
%    which indicates that the \cs{textwidth}
%    scales neither too much nor too little with the font.
%
%    Nevertheless, it is possible to fine-tune the results
%    by passing a positive or negative number
%    as an optional argument to \cs{settextwidth}.
%    By default, \cs{settextwidth}
%    mutliplies the average character width by 69
%    (i.e., \cs{settextwidth}, in theory, calculates the average width
%    of a line of 69 characters).
%    The optional argument adds or subtracts from the default value of 69.
%    For example, pass |1| or |+1| to \cs{settextwidth}
%    to multiply the average character width by 70,
%    or |-3| to multiply the average character width by 66.
%    \begin{macrocode}
\NewDocumentCommand{\settextwidth}{O{0}}{%
  \settowidth\rh@upperletters{%
    ABCDEFGHIJKLMNOPQRSTUVWXYZ%
  }
  \settowidth\rh@lowerletters{%
    abcdefghijklmnopqrstuvwxyz%
  }
  \settowidth\rh@spaces{%
    \spacefactor\sfcode`. \space
    \spacefactor\sfcode`a \space
  }
  \settowidth\rh@others@nondigit{%
    .,:;!?()'"-%
  }
  \settowidth\rh@others@digit{%
    0123456789%
  }
  \setlength\rh@allprintablechars{\rh@upperletters}
  \addtolength\rh@allprintablechars{60\rh@lowerletters}
  \addtolength\rh@allprintablechars{100\rh@spaces}
  \addtolength\rh@allprintablechars{5\rh@others@nondigit}
  \addtolength\rh@allprintablechars{\rh@others@digit}
  \setlength\rh@linelength{\dimeval{\rh@allprintablechars / 1851 * (69 + #1)}}

  \setlength\rh@maxtextwidth{\dimeval{\paperwidth - 2in}}
  \setlength\rh@maxtextwidth@twocol{2\rh@linelength}
  \addtolength\rh@maxtextwidth@twocol{\columnsep}
  \addtolength\rh@maxtextwidth@twocol{\columnseprule}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
%    Don't exceed the maximum \cs{textwidth}
%    (cf.\ the documentation for |classes|).
%    \begin{macrocode}
  \ifbool{@twocolumn}{
    \ifdimgreater{\rh@maxtextwidth@twocol}{\rh@maxtextwidth}{
      \geometry{textwidth=\rh@maxtextwidth}
    }{
      \geometry{textwidth=\rh@maxtextwidth@twocol}
    }
  }{
    \ifdimgreater{\rh@linelength}{\rh@maxtextwidth}{
      \geometry{textwidth=\rh@maxtextwidth}
    }{
      \geometry{textwidth=\rh@linelength}
    }
  }
}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
% \end{macro}
%
% \subsection{Set \cs{textheight}}
%
% \begin{macro}{\settextheight}
%    Following a similar procedure as |classes|,
%    set the \cs{textheight}
%    to the maximum number of lines that can fit on the page.
%    \begin{macrocode}
\NewDocumentCommand{\settextheight}{O{0}}{
  \setlength\rh@maxtextheight{\paperheight}
  \addtolength\rh@maxtextheight{-2in}
  \addtolength\rh@maxtextheight{-\headheight}
  \addtolength\rh@maxtextheight{-\headsep}
  \addtolength\rh@maxtextheight{-\footskip}

  \divide\rh@maxtextheight by \baselineskip
  \setcounter{rh@maxlines}{\rh@maxtextheight}
  \addtocounter{rh@maxlines}{-1}

  \setlength\rh@textheight{\value{rh@maxlines}\baselineskip}
  \addtolength\rh@textheight{\topskip}
  \addtolength\rh@textheight{#1\baselineskip}
  \geometry{textheight=\rh@textheight}
}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
% \end{macro}
%
% \subsection{Initialize \cs{textwidth} and \cs{textheight}}
%
%    \begin{macrocode}
\settextwidth
\settextheight
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \section{Package Configuration and Macros}
%
%    \begin{macrocode}
\clubpenalty=10000
\widowpenalty=10000
\hyphenation{Prem-ise Prem-ises}

\ifbool{rh@anonymous}{
  \patchcmd{\@maketitle}{%
    {\large
      \lineskip .5em%
      \begin{tabular}[t]{c}%
        \@author
      \end{tabular}\par}%
    \vskip 1em%
  }{}{}{}
}{}
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \subsection{Macros Denoting Logical Structure}
%
%    \begin{macrocode}
\NewCommandCopy\texttitle\emph
\NewCommandCopy\alialingua\emph
\NewCommandCopy\define\emph
\NewCommandCopy\attn\textbf
%    \end{macrocode}
%    \begin{noprintcode}

%    \end{noprintcode}
%
% \subsection{Greek Words}
%
%    Define macros for various Greek words,
%    both lower and upper-case,
%    and in some cases with or without an article
%    (the starred version of the command prints the article).
%    (These macros are not printed here,
%    due to the difficulty of finding an attractive typewriter font
%    that will typeset all the necessary Greek characters).
%
%    \begin{noprintcode}
\NewDocumentCommand{\akrates}{}{%
  \foreignlanguage{ancientgreek}{ἀκρατής}%
}

\NewDocumentCommand{\Akrates}{}{%
  \foreignlanguage{ancientgreek}{Ἀκρατής}%
}

\NewDocumentCommand{\Bouleseis}{}{%
  \foreignlanguage{ancientgreek}{Βουλήσεις}%
}

\NewDocumentCommand{\bouleseis}{}{%
  \foreignlanguage{ancientgreek}{βουλήσεις}%
}

\NewDocumentCommand{\Boulesis}{}{%
  \foreignlanguage{ancientgreek}{Βούλησις}%
}

\NewDocumentCommand{\boulesis}{}{%
  \foreignlanguage{ancientgreek}{βούλησις}%
}

\NewDocumentCommand{\Deinos}{}{%
  \foreignlanguage{ancientgreek}{Δεινός}%
}

\NewDocumentCommand{\deinos}{}{%
  \foreignlanguage{ancientgreek}{δεινός}%
}

\NewDocumentCommand{\Deinotes}{}{%
  \foreignlanguage{ancientgreek}{Δεινότης}%
}

\NewDocumentCommand{\deinotes}{}{%
  \foreignlanguage{ancientgreek}{δεινότης}%
}

\NewDocumentCommand{\enkrates}{}{%
  \foreignlanguage{ancientgreek}{ἐγκρατής}%
}

\NewDocumentCommand{\Enkrates}{}{%
  \foreignlanguage{ancientgreek}{Ἐγκρατής}%
}

\NewDocumentCommand{\epithumia}{}{%
  \foreignlanguage{ancientgreek}{ἐπιθυμία}%
}

\NewDocumentCommand{\Epithumia}{}{%
  \foreignlanguage{ancientgreek}{Ἐπιθυμία}%
}

\NewDocumentCommand{\ergon}{}{%
  \foreignlanguage{ancientgreek}{ἔργον}%
}

\NewDocumentCommand{\Ergon}{}{%
  \foreignlanguage{ancientgreek}{Ἔργον}%
}

\NewDocumentCommand{\Euboulia}{}{%
  \foreignlanguage{ancientgreek}{Εὐβουλία}%
}

\NewDocumentCommand{\euboulia}{}{%
  \foreignlanguage{ancientgreek}{εὐβουλία}%
}

\NewDocumentCommand{\Krisis}{}{%
  \foreignlanguage{ancientgreek}{Κρίσις}%
}

\NewDocumentCommand{\krisis}{}{%
  \foreignlanguage{ancientgreek}{κρίσις}%
}

\NewDocumentCommand{\Logoi}{}{%
  \foreignlanguage{ancientgreek}{Λόγοι}%
}

\NewDocumentCommand{\logoi}{}{%
  \foreignlanguage{ancientgreek}{λόγοι}%
}

\NewDocumentCommand{\Logos}{}{%
  \foreignlanguage{ancientgreek}{Λόγος}%
}

\NewDocumentCommand{\logos}{}{%
  \foreignlanguage{ancientgreek}{λόγος}%
}

\NewDocumentCommand{\Nous}{}{%
  \foreignlanguage{ancientgreek}{Νοῦς}%
}

\NewDocumentCommand{\nous}{}{%
  \foreignlanguage{ancientgreek}{νοῦς}%
}

\NewDocumentCommand{\orexis}{}{%
  \foreignlanguage{ancientgreek}{ὄρεξις}%
}

\NewDocumentCommand{\Orexis}{}{%
  \foreignlanguage{ancientgreek}{Ὄρεξις}%
}

\NewDocumentCommand{\Pathemata}{}{%
  \foreignlanguage{ancientgreek}{Παθήματα}%
}

\NewDocumentCommand{\pathemata}{}{%
  \foreignlanguage{ancientgreek}{παθήματα}%
}

\NewDocumentCommand{\Phantasiai}{}{%
  \foreignlanguage{ancientgreek}{Φαντασίαι}%
}

\NewDocumentCommand{\phantasiai}{}{%
  \foreignlanguage{ancientgreek}{φαντασίαι}%
}

\NewDocumentCommand{\Phantasia}{}{%
  \foreignlanguage{ancientgreek}{Φαντασία}%
}

\NewDocumentCommand{\phantasia}{}{%
  \foreignlanguage{ancientgreek}{φαντασία}%
}

\NewDocumentCommand{\Phantasmata}{}{%
  \foreignlanguage{ancientgreek}{Φαντάσματα}%
}

\NewDocumentCommand{\phantasmata}{}{%
  \foreignlanguage{ancientgreek}{φαντάσματα}%
}

\NewDocumentCommand{\Phantasma}{}{%
  \foreignlanguage{ancientgreek}{Φάντασμα}%
}

\NewDocumentCommand{\phantasma}{}{%
  \foreignlanguage{ancientgreek}{φάντασμα}%
}

\NewDocumentCommand{\Phronesis}{}{%
  \foreignlanguage{ancientgreek}{Φρόνησις}%
}

\NewDocumentCommand{\phronesis}{}{%
  \foreignlanguage{ancientgreek}{φρόνησις}%
}

\NewDocumentCommand{\Phronime}{}{%
  \foreignlanguage{ancientgreek}{Φρονίμη}%
}

\NewDocumentCommand{\phronime}{}{%
  \foreignlanguage{ancientgreek}{φρονίμη}%
}

\NewDocumentCommand{\Phronimoi}{}{%
  \foreignlanguage{ancientgreek}{Φρόνιμοι}%
}

\NewDocumentCommand{\phronimoi}{}{%
  \foreignlanguage{ancientgreek}{φρόνιμοι}%
}

\NewDocumentCommand{\Phronimos}{}{%
  \foreignlanguage{ancientgreek}{Φρόνιμος}%
}

\NewDocumentCommand{\phronimos}{}{%
  \foreignlanguage{ancientgreek}{φρόνιμος}%
}

\NewDocumentCommand{\Prohaireseis}{}{%
  \foreignlanguage{ancientgreek}{Προαιρέσεις}%
}

\NewDocumentCommand{\prohaireseis}{}{%
  \foreignlanguage{ancientgreek}{προαιρέσεις}%
}

\NewDocumentCommand{\Prohairesis}{}{%
  \foreignlanguage{ancientgreek}{Προαίρεσις}%
}

\NewDocumentCommand{\prohairesis}{}{%
  \foreignlanguage{ancientgreek}{προαίρεσις}%
}

\NewDocumentCommand{\Thumos}{}{%
  \foreignlanguage{ancientgreek}{Θυμός}%
}

\NewDocumentCommand{\thumos}{}{%
  \foreignlanguage{ancientgreek}{θυμός}%
}

\NewDocumentCommand{\doxastikon}{s}{%
  \foreignlanguage{ancientgreek}{\IfBooleanT{#1}{τὸ }δοξαστικόν}%
}

\NewDocumentCommand{\Doxastikon}{s}{%
  \IfBooleanTF{#1}{%
    \foreignlanguage{ancientgreek}{Τὸ δοξαστικόν}%
  }{%
    \foreignlanguage{ancientgreek}{Δοξαστικόν}%
  }%
}

\NewDocumentCommand{\ToDoxastikon}{}{%
  \foreignlanguage{ancientgreek}{Τὸ Δοξαστικόν}%
}

\NewDocumentCommand{\kalon}{s}{%
  \foreignlanguage{ancientgreek}{\IfBooleanT{#1}{τὸ }καλόν}%
}

\NewDocumentCommand{\Kalon}{s}{%
  \IfBooleanTF{#1}{%
    \foreignlanguage{ancientgreek}{Τὸ καλόν}%
  }{%
    \foreignlanguage{ancientgreek}{Καλόν}%
  }%
}

\NewDocumentCommand{\ToKalon}{}{%
  \foreignlanguage{ancientgreek}{Τὸ Καλόν}%
}

\NewDocumentCommand{\logistikon}{s}{%
  \foreignlanguage{ancientgreek}{\IfBooleanT{#1}{τὸ }λογιστικόν}%
}

\NewDocumentCommand{\Logistikon}{s}{%
  \IfBooleanTF{#1}{%
    \foreignlanguage{ancientgreek}{Τὸ λογιστικόν}%
  }{%
    \foreignlanguage{ancientgreek}{Λογιστικόν}%
  }%
}

\NewDocumentCommand{\ToLogistikon}{}{%
  \foreignlanguage{ancientgreek}{Τὸ Λογιστικόν}%
}

%    \end{noprintcode}
%
%    If the |translit| option has been set
%    (the default),
%    then redefine some of these macros
%    to print the transliterated Greek word.
%
%    \begin{macrocode}
\ifbool{rh@translit}{% TODO add hyphenation patterns
  \RenewDocumentCommand{\boulesis}{}{\alialingua{boulēsis}}
  \RenewDocumentCommand{\Boulesis}{}{\alialingua{Boulēsis}}
  \RenewDocumentCommand{\bouleseis}{}{\alialingua{boulēseis}}
  \RenewDocumentCommand{\Bouleseis}{}{\alialingua{Boulēseis}}
  \RenewDocumentCommand{\nous}{}{\alialingua{nous}}
  \RenewDocumentCommand{\Nous}{}{\alialingua{Nous}}
  \RenewDocumentCommand{\phantasiai}{}{\alialingua{phantasiai}}
  \RenewDocumentCommand{\Phantasiai}{}{\alialingua{Phantasiai}}
  \RenewDocumentCommand{\phantasia}{}{\alialingua{phantasia}}
  \RenewDocumentCommand{\Phantasia}{}{\alialingua{Phantasia}}
  \RenewDocumentCommand{\phantasmata}{}{\alialingua{phantasmata}}
  \RenewDocumentCommand{\Phantasmata}{}{\alialingua{Phantasmata}}
  \RenewDocumentCommand{\phantasma}{}{\alialingua{phantasma}}
  \RenewDocumentCommand{\Phantasma}{}{\alialingua{Phantasma}}
  \RenewDocumentCommand{\phronesis}{}{\alialingua{phronēsis}}
  \RenewDocumentCommand{\Phronesis}{}{\alialingua{Phronēsis}}
  \RenewDocumentCommand{\thumos}{}{\alialingua{thumos}}
  \RenewDocumentCommand{\Thumos}{}{\alialingua{Thumos}}
}{}
%    \end{macrocode}
